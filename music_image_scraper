#!/bin/bash

# Name: music_image_scraper
# Description: Script to download images related to music using the ImageScraperSuite.
# License: LGPL
# GitHub: https://github.com/raven2cz/ImageScraperSuite

VERSION="1.0.0"
HELP_MESSAGE="Usage: $0 [options] <song_name> <artist_name> [album_name] [--output-dir <output_dir>]
Options:
  -h, --help        Display this help message and exit.
  -v, --version     Display script version and exit.
  --output-dir      Directory for processing and saving data (optional, default: ~/.cache/ImageScraperSuite).

Arguments:
  song_name         Name of the song.
  artist_name       Name of the artist.
  album_name        Name of the album (optional)."

# Function to display help message
function show_help {
  echo "$HELP_MESSAGE"
}

# Function to display version
function show_version {
  echo "music_image_scraper version $VERSION"
}

# Default output directory
OUTPUT_DIR="$HOME/.cache/ImageScraperSuite"

# Parse options
while [[ "$#" -gt 0 ]]; do
  case $1 in
    -h|--help)
      show_help
      exit 0
      ;;
    -v|--version)
      show_version
      exit 0
      ;;
    --output-dir)
      OUTPUT_DIR="$2"
      shift 2
      ;;
    *)
      break
      ;;
  esac
done

# Process remaining arguments
SONG_NAME=$1
ARTIST_NAME=$2
ALBUM_NAME=$3

# Check for mandatory arguments
if [ -z "$SONG_NAME" ] || [ -z "$ARTIST_NAME" ]; then
  echo "Error: Missing required arguments."
  echo ""
  show_help
  exit 1
fi

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Check if output directory exists
if [ ! -d "$OUTPUT_DIR" ]; then
  echo "Error: Output directory does not exist and could not be created."
  exit 1
fi

# Run scripts with output directory argument
node generateImageKeywordsFromSong.js "$SONG_NAME" "$ARTIST_NAME" "$ALBUM_NAME" "$OUTPUT_DIR" &&
node scrapeImages.js "$OUTPUT_DIR" &&
node removeDuplicateAndCorruptedImages.js "$OUTPUT_DIR"

echo "Process completed."
